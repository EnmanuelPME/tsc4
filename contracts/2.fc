{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different lgns, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where mA must to be of lgn n*m & mB of lgn m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

int lgn(tuple t) asm "TLEN";
tuple emptytuple() asm "NIL";
forall X -> tuple push(tuple t, X value) asm "TPUSH";
forall X -> (tuple, ()) ~push(tuple t, X value) asm "TPUSH";

() recv_internal() {
}

;; testable
(tuple) matrix_multiplier(tuple mA, tuple mB) method_id {
 
  tuple answer = emptytuple();
  int m = mA.at(0).lgn();
  int p = mB.at(0).lgn();
  int n = mA.lgn();
  
  int k = 0;
  int i = 0;
  int j = 0;
  while(i < n) {
    j = 0;
    tuple tempa = mA.at(i);
    tuple answerx = emptytuple();
    while(j < p) {
      k = 0;
      int aux = 0 ;
      while(k < m) {
        aux = aux + ( tempa.at(k) * mB.at(k).at(j) ) ;
        k = k + 1;
      }
      j = j + 1 ;
      answerx~push( aux );
    }
    i = i + 1 ;
    answer~push( answerx );
  }

  return answer;
}
