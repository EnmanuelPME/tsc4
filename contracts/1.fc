() recv_internal() {
}

forall X -> (tuple, ()) pb (tuple tail, X head) inline asm "CONS";
forall X -> (tuple, (X)) popb (tuple t) inline asm "UNCONS";
forall X -> int empty (X x) inline asm "ISNULL";

;; testable
(cell) find_branch_by_hash(int hash, cell tree) method_id {
    tuple pila = null();
    pila~pb(tree);
    while (~ pila.empty()) {
        tree = pila~popb();
        if(tree.cell_hash() == hash){
          return tree;
        }
        slice sc = tree.begin_parse();
        repeat (sc.slice_refs()) {
            pila~pb(sc~load_ref());
        }
    }
    return begin_cell().end_cell();
}
